name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
env:
    # Front-end Domain    
    WORKING_DIRECTORY_FRONTEND: master-ugr.calculator.front-end/calculator.frontend
    # Back-end Domain
    WORKING_DIRECTORY_BACKEND: master-ugr.calculator.back-end/calculator.backend
    # Sonarcloud Domain
    SONARCLOUD_NAME: NachoBC82_Case3_DS_TDD
    SONARCLOUD_ORGANIZATION: nachobc82
    SONARCLOUD_HOST_URL: https://sonarcloud.io

    CONFIGURATION: Release
    DOTNET_CORE_VERSION: 8.0.x
jobs:
  backend-analysis:
    name: Back-end analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '${{ env.DOTNET_CORE_VERSION }}'
      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
          export PATH="$PATH:/home/runner/.dotnet/tools"
      - name: Restore dependencies for back-end
        run: dotnet restore ${{ env.WORKING_DIRECTORY_BACKEND }}
      - name: Analyze back-end
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin \
            /k:"${{ env.SONARCLOUD_NAME }}" \
            /o:"${{ env.SONARCLOUD_ORGANIZATION }}" \
            /d:sonar.sources="${{ env.WORKING_DIRECTORY_BACKEND }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="${{ env.SONARCLOUD_HOST_URL }}"
          dotnet build ${{ env.WORKING_DIRECTORY_BACKEND }} --configuration ${{ env.CONFIGURATION }} --no-restore
          dotnet-sonarscanner end \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"

  frontend-analysis:
    name: Front-end analysis
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '${{ env.DOTNET_CORE_VERSION }}'
      - name: Install SonarCloud scanner
        run: |
          dotnet tool install --global dotnet-sonarscanner
          export PATH="$PATH:/home/runner/.dotnet/tools"
      - name: Restore dependencies for front-end
        run: dotnet restore ${{ env.WORKING_DIRECTORY_FRONTEND }}
      - name: Analyze front-end
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin \
            /k:"${{ env.SONARCLOUD_NAME }}" \
            /o:"${{ env.SONARCLOUD_ORGANIZATION }}" \
            /d:sonar.sources="${{ env.WORKING_DIRECTORY_FRONTEND }}" \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}" \
            /d:sonar.host.url="${{ env.SONARCLOUD_HOST_URL }}"
          dotnet build ${{ env.WORKING_DIRECTORY_FRONTEND }} --configuration ${{ env.CONFIGURATION }} --no-restore
          dotnet-sonarscanner end \
            /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
