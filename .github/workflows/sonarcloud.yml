name: SonarCloud Analysis

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
env:
    DOTNET_CORE_VERSION: 8.0.x
    SONARCLOUD_PROJECT: NachoBC82_Case3_DS_TDD
    SONARCLOUD_ORGANIZATION: nachobc82

jobs:
  build:
    runs-on: windows-latest

    steps:
      # 1. Clonar el código
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Clonar todo el historial para un análisis más relevante

      # 2. Configurar .NET
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_CORE_VERSION }}

      # 3. Restaurar dependencias
      - name: Restore dependencies
        run: dotnet restore

      # 4. Compilar el proyecto
      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      # 5. Ejecutar pruebas
      - name: Run tests
        run: dotnet test --no-build --configuration Release --collect:"XPlat Code Coverage"

      # 6. Configurar el informe de cobertura (opcional)
      - name: Report test coverage
        run: |
          reportgenerator -reports:**/coverage.cobertura.xml -targetdir:coverage -reporttypes:Html
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 7. Escaneo de SonarCloud
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v3.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=${{ env.SONARCLOUD_PROJECT }}
            -Dsonar.organization=${{ env.SONARCLOUD_ORGANIZATION }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.cs.opencover.reportsPaths=**/coverage.opencover.xml