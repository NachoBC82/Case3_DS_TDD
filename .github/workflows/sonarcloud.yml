name: SonarQube
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
env:
    # Sonarcloud Domain
    SONARCLOUD_NAME: NachoBC82_Case3_DS_TDD
    SONARCLOUD_ORGANIZATION: nachobc82
    SONARCLOUD_HOST_URL: https://sonarcloud.io

    CONFIGURATION: Release
    DOTNET_CORE_VERSION: 8.0.x

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '${{ env.DOTNET_CORE_VERSION }}'  # Cambia según la versión de .NET que uses
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Desactivar clones superficiales para un análisis más relevante
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: ./.sonar/scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./.sonar/scanner
          dotnet tool update dotnet-sonarscanner --tool-path ./.sonar/scanner
      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          ./.sonar/scanner/dotnet-sonarscanner begin /k:"${{ env.SONARCLOUD_NAME }}" /o:"${{ env.SONARCLOUD_ORGANIZATION }}" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="${{ env.SONARCLOUD_HOST_URL }}"
          dotnet build
          ./.sonar/scanner/dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
